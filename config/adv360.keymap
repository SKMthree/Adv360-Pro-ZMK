
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL        &kp N1     &kp N2    &kp N3     &kp N4    &kp N5                   &mo 3     &tog 1           &kp N6     &kp N7     &kp N8             &kp N9     &kp N0  &kp MINUS
   &kp TAB         &kp Q      &kp W     &kp E      &kp R     &kp T            &bt BT_SEL 0     &kp UP            &kp Y      &kp U      &kp I              &kp O      &kp P  &macro_[]
   &kp ESC         &kp A      &kp S     &kp D      &kp F     &kp G            &bt BT_SEL 1  &kp LCTRL         &kp LALT                                 &kp LGUI  &kp RCTRL   &kp DOWN   &kp H   &kp J      &kp K    &kp L  &kp SEMI               &kp SQT
 &kp LSHFT         &kp Z      &kp X     &kp C      &kp V     &kp B                   &none      &none         &kp HOME      &none      &none  &macro_ctrl+break      &none      &none   &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp NON_US_BACKSLASH
     &mo 2  &kp LEFT_GUI  &kp GRAVE  &kp LEFT  &kp RIGHT  &kp BSPC                 &kp DEL    &kp END  &kp PRINTSCREEN  &kp ENTER  &kp SPACE           &kp LBKT  &kp EQUAL   &kp INT3   &none   &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL        &kp N1     &kp N2    &kp N3     &kp N4    &kp N5              &mo 3     &tog 0     &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY   &kp MINUS
   &kp TAB         &none      &none    &kp UP      &none     &none              &none      &none      &none   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS    &kp BSLH
   &kp ESC         &none   &kp LEFT  &kp DOWN  &kp RIGHT     &none              &none  &kp LCTRL   &kp LALT                                 &kp LGUI        &kp RCTRL       &none     &none  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS    &kp SQT
 &kp LSHFT         &none      &none     &none      &none     &none              &none      &none   &kp HOME       &none         &none      &kp PG_UP            &none       &none     &none  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp LEFT_GUI  &kp GRAVE  &kp LEFT  &kp RIGHT  &kp BSPC            &kp DEL    &kp END  &kp PG_DN   &kp ENTER     &kp SPACE      &kp KP_N0         &kp LBKT  &kp KP_DOT  &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5             &mo 3  &tog 1  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
  &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans  &trans  &trans  &trans   &trans   &trans
  &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans   &trans    &none  &trans  &trans  &trans  &trans  &trans  &trans
   &to 2  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans    &none    &none  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR  &out OUT_TOG                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

        layer_test {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &kp MINUS  &kp EQUAL  &kp INT3
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans     &trans   &kp LBKT  &kp RBKT
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                     &trans     &trans    &trans  &trans  &trans     &trans  &kp SEMICOLON  &kp SINGLE_QUOTE         &kp BACKSLASH
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans     &trans     &trans    &trans  &trans  &trans  &kp COMMA     &kp PERIOD         &kp SLASH  &kp NON_US_BACKSLASH
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans      &none      &none     &none   &none   &none
            >;
        };

    };
};
